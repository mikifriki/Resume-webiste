{"ast":null,"code":"import _classCallCheck from \"/Users/miku/Development/Git/Resume-webiste/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miku/Development/Git/Resume-webiste/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/miku/Development/Git/Resume-webiste/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/miku/Development/Git/Resume-webiste/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/miku/Development/Git/Resume-webiste/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/miku/Development/Git/Resume-webiste/src/Another.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nvar Repo = function Repo(_ref) {\n  var repo = _ref.repo,\n      index = _ref.index;\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, index + 1), React.createElement(\"td\", {\n    className: \"repo-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, repo.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, repo.stargazers_count, \" Stars\"));\n};\n\nvar GitHubRepos =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GitHubRepos, _React$Component);\n\n  function GitHubRepos(props) {\n    var _this;\n\n    _classCallCheck(this, GitHubRepos);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GitHubRepos).call(this, props));\n    _this.state = {\n      repos: [],\n      loading: true,\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(GitHubRepos, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(window.encodeURI(\"https://api.github.com/users/mikifriki/repos>\")).then(function (response) {\n        var repos = response.data.items;\n\n        _this2.setState({\n          repos: repos,\n          loading: false\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          error: error,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }, {\n    key: \"renderError\",\n    value: function renderError() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Sorry, an error ocurred: \", this.state.error.response.data.message));\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          repos = _this$state.repos;\n\n      if (error) {\n        console.log(error);\n        return this.renderError();\n      }\n\n      return React.createElement(\"table\", {\n        className: \"table table-striped\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Repo Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Stars Count\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, repos.map(function (repo, index) {\n        return React.createElement(Repo, {\n          repo: repo,\n          index: index,\n          key: repo.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.state.loading ? this.renderLoading() : this.renderList();\n    }\n  }]);\n\n  return GitHubRepos;\n}(React.Component);\n\nexport { GitHubRepos as default };","map":{"version":3,"sources":["/Users/miku/Development/Git/Resume-webiste/src/Another.js"],"names":["React","Component","PropTypes","axios","Repo","repo","index","name","stargazers_count","GitHubRepos","props","state","repos","loading","error","get","window","encodeURI","then","response","data","items","setState","catch","message","console","log","renderError","map","id","renderLoading","renderList"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,KAAT,QAASA,KAAT;AAAA,SACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,GAAG,CAAb,CADF,EAEE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BD,IAAI,CAACE,IAAhC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACG,gBAAV,WAHF,CADW;AAAA,CAAb;;IAOqBC,W;;;;;AACnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAHiB;AAQlB;;;;wCAEmB;AAAA;;AAClBX,MAAAA,KAAK,CACFY,GADH,CAEIC,MAAM,CAACC,SAAP,iDAFJ,EAMGC,IANH,CAMQ,UAAAC,QAAQ,EAAI;AAChB,YAAMP,KAAK,GAAGO,QAAQ,CAACC,IAAT,CAAcC,KAA5B;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AACZV,UAAAA,KAAK,EAALA,KADY;AAEZC,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OAZH,EAaGU,KAbH,CAaS,UAAAT,KAAK,EAAI;AACd,QAAA,MAAI,CAACQ,QAAL,CAAc;AACZR,UAAAA,KAAK,EAAEA,KADK;AAEZD,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OAlBH;AAmBD;;;oCAEe;AACd,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAKD;;;kCAEa;AACZ,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAC4B,KAAKF,KAAL,CAAWG,KAAX,CAAiBK,QAAjB,CAA0BC,IAA1B,CAA+BI,OAD3D,CADF,CADF;AAOD;;;iCAEY;AAAA,wBACc,KAAKb,KADnB;AAAA,UACHG,KADG,eACHA,KADG;AAAA,UACIF,KADJ,eACIA,KADJ;;AAGX,UAAIE,KAAJ,EAAW;AACTW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACA,eAAO,KAAKa,WAAL,EAAP;AACD;;AAED,aACE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGf,KAAK,CAACgB,GAAN,CAAU,UAACvB,IAAD,EAAOC,KAAP;AAAA,eACT,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAED,IAAZ;AAAkB,UAAA,KAAK,EAAEC,KAAzB;AAAgC,UAAA,GAAG,EAAED,IAAI,CAACwB,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADS;AAAA,OAAV,CADH,CARF,CADF;AAgBD;;;6BAEQ;AACP,aAAO,KAAKlB,KAAL,CAAWE,OAAX,GAAqB,KAAKiB,aAAL,EAArB,GAA4C,KAAKC,UAAL,EAAnD;AACD;;;;EA/EsC/B,KAAK,CAACC,S;;SAA1BQ,W","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst Repo = ({ repo, index }) =>\n  <tr>\n    <td>{index + 1}</td>\n    <td className=\"repo-name\">{repo.name}</td>\n    <td>{repo.stargazers_count} Stars</td>\n  </tr>;\n\nexport default class GitHubRepos extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      repos: [],\n      loading: true,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        window.encodeURI(\n          `https://api.github.com/users/mikifriki/repos>`,\n        ),\n      )\n      .then(response => {\n        const repos = response.data.items;\n        this.setState({\n          repos,\n          loading: false,\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: error,\n          loading: false,\n        });\n      });\n  }\n\n  renderLoading() {\n    return (\n      <div>\n        Loading...\n      </div>\n    );\n  }\n\n  renderError() {\n    return (\n      <div>\n        <div>\n          Sorry, an error ocurred: {this.state.error.response.data.message}\n        </div>\n      </div>\n    );\n  }\n\n  renderList() {\n    const { error, repos } = this.state;\n\n    if (error) {\n      console.log(error);\n      return this.renderError();\n    }\n\n    return (\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Repo Name</th>\n            <th>Stars Count</th>\n          </tr>\n        </thead>\n        <tbody>\n          {repos.map((repo, index) =>\n            <Repo repo={repo} index={index} key={repo.id} />,\n          )}\n        </tbody>\n      </table>\n    );\n  }\n\n  render() {\n    return this.state.loading ? this.renderLoading() : this.renderList();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}